import React from 'react';
import { Button, Tag, Input, Checkbox } from 'antd';
import { CheckOutlined, MinusOutlined, TagOutlined } from '@ant-design/icons';
import RemoveIcon from '../../../assets/icons/removeTagIcon.svg';
import './tag.css';
import CustomCheckbox from '../../../styledComponents/CustomCheckbox';

const CustomTag = ({
  color = '#D95C45',
  tagName = null,
  name = 'Development',
  withCheckBox = false,
  sla = null,
  removeAction = () => {},
}) => {
  return (
    <div
      style={{
        display: 'flex',
        alignItems: sla !== null ? 'flex-start' : 'center',
        gap: '10px',
        border: '1px solid #DADADA',
        borderRadius: '8px',
        maxWidth: '300px',
        margin: '20px',
        padding: '12px',
      }}
    >
      {withCheckBox && (
        // <Button type="primary" shape="circle" icon={<CheckOutlined />} />
        <CustomCheckbox
          // onChange={handleCheckboxChange}
          style={{ marginLeft: 'auto' }}
        />
      )}
      {tagName && (
        <div
          style={{
            background: color,
            aspectRatio: '1/1',
            height: '25.5px',
            borderRadius: '2px',
          }}
        ></div>
      )}
      <div
        style={{
          display: 'flex',
          flexDirection: 'column',
          gap: '12px',
          flexGrow: '1',
        }}
      >
        <div className={tagName ? 'tag' : 'skill'}>
          {tagName ? (
            <Tag
              style={{
                height: '100%',
                fontSize: '13px',
                color: color,
                backgroundColor: '#fff',
                border: 'none',
              }}
            >
              <svg
                width="13"
                height="13"
                viewBox="0 0 13 11"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M6.08728 1.0167C5.7547 1.06057 5.34411 1.15482 4.7602 1.2897L4.09449 1.44353C3.60157 1.55728 3.2614 1.63636 3.00195 1.7252C2.75115 1.81132 2.60924 1.89582 2.50253 2.00307C2.39528 2.10978 2.31078 2.2517 2.22465 2.50249C2.13582 2.76195 2.05674 3.10157 1.94299 3.59503L1.78915 4.2602C1.65428 4.84465 1.56003 5.25524 1.51615 5.58782C1.47282 5.91174 1.48311 6.13111 1.54053 6.33045C1.5974 6.52978 1.7052 6.72099 1.9132 6.97286C2.12715 7.23178 2.42453 7.53024 2.84865 7.95436L3.8399 8.94561C4.57603 9.68174 5.09982 10.2044 5.55049 10.5479C5.9914 10.8848 6.31424 11.011 6.64195 11.011C6.9702 11.011 7.29249 10.8848 7.73395 10.5479C8.18407 10.2044 8.7084 9.6812 9.44453 8.94507C10.1812 8.2084 10.7039 7.68461 11.0479 7.23449C11.3837 6.79303 11.5104 6.47074 11.5104 6.14249C11.5104 5.81478 11.3842 5.49249 11.0473 5.05103C10.7039 4.60036 10.1807 4.07603 9.44453 3.3399L8.45328 2.34865C8.0297 1.92507 7.73124 1.6277 7.47286 1.41374C7.22045 1.20574 7.02924 1.09795 6.8299 1.04107C6.63057 0.983654 6.4112 0.973904 6.08782 1.0167M5.98165 0.211238C6.37003 0.159779 6.71074 0.161404 7.05415 0.259988C7.39811 0.358571 7.6879 0.537863 7.99015 0.787029C8.28265 1.02861 8.60765 1.35361 9.01445 1.7604L10.0414 2.7874C10.751 3.49699 11.3133 4.05924 11.6935 4.55865C12.0857 5.07161 12.3235 5.56561 12.3235 6.14249C12.3235 6.7199 12.0857 7.2139 11.6941 7.72686C11.3133 8.22628 10.7516 8.78853 10.0414 9.49811L9.99811 9.54145C9.28853 10.251 8.72628 10.8133 8.22686 11.1935C7.7139 11.5857 7.21936 11.8235 6.64249 11.8235C6.06561 11.8235 5.57161 11.5857 5.05811 11.1941C4.55924 10.8133 3.99699 10.2516 3.28686 9.54145L2.2604 8.5139C1.85415 8.10765 1.52861 7.78211 1.28703 7.49015C1.03786 7.18736 0.858571 6.89757 0.759988 6.55415C0.661404 6.2102 0.659779 5.86949 0.711238 5.48111C0.760529 5.1052 0.864529 4.6567 0.993446 4.09661L1.15595 3.39082C1.26428 2.92336 1.35203 2.54203 1.45657 2.23815C1.56599 1.9202 1.70303 1.65315 1.92836 1.42782C2.1537 1.20249 2.42128 1.0649 2.7387 0.956571C3.04257 0.851488 3.4239 0.763737 3.89136 0.655946L4.59715 0.493446C5.15724 0.363446 5.60574 0.260529 5.98165 0.210696M5.14045 3.8312C5.01345 3.7042 4.84121 3.63286 4.66161 3.63286C4.48202 3.63286 4.30977 3.7042 4.18278 3.8312C4.05578 3.95819 3.98444 4.13043 3.98444 4.31003C3.98444 4.48963 4.05578 4.66187 4.18278 4.78886C4.24566 4.85174 4.32031 4.90162 4.40247 4.93566C4.48463 4.96969 4.57269 4.9872 4.66161 4.9872C4.75054 4.9872 4.8386 4.96969 4.92076 4.93566C5.00291 4.90162 5.07756 4.85174 5.14045 4.78886C5.20333 4.72598 5.25321 4.65133 5.28724 4.56917C5.32127 4.48701 5.33879 4.39896 5.33879 4.31003C5.33879 4.2211 5.32127 4.13304 5.28724 4.05089C5.25321 3.96873 5.20333 3.89408 5.14045 3.8312ZM3.60861 3.25703C3.74659 3.11719 3.91087 3.00602 4.09199 2.92993C4.27311 2.85384 4.4675 2.81433 4.66395 2.81367C4.8604 2.81301 5.05505 2.85122 5.23667 2.92609C5.4183 3.00097 5.58332 3.11103 5.72224 3.24995C5.86115 3.38886 5.97121 3.55388 6.04609 3.73551C6.12097 3.91714 6.15917 4.11178 6.15852 4.30823C6.15786 4.50469 6.11835 4.69907 6.04225 4.88019C5.96616 5.06131 5.855 5.22559 5.71515 5.36357C5.43574 5.64299 5.05677 5.79996 4.66161 5.79996C4.26646 5.79996 3.88749 5.64299 3.60807 5.36357C3.32865 5.08415 3.17168 4.70518 3.17168 4.31003C3.17168 3.91487 3.32865 3.5359 3.60807 3.25649M10.3188 5.45349C10.3949 5.52966 10.4376 5.63292 10.4376 5.74057C10.4376 5.84823 10.3949 5.95148 10.3188 6.02765L6.53849 9.80849C6.46148 9.88025 6.35962 9.91931 6.25437 9.91746C6.14912 9.9156 6.04871 9.87296 5.97428 9.79853C5.89984 9.7241 5.85721 9.62368 5.85535 9.51844C5.85349 9.41319 5.89256 9.31133 5.96432 9.23432L9.74407 5.45349C9.7818 5.41574 9.82659 5.38579 9.8759 5.36536C9.92521 5.34492 9.97805 5.33441 10.0314 5.33441C10.0848 5.33441 10.1376 5.34492 10.187 5.36536C10.2363 5.38579 10.2811 5.41574 10.3188 5.45349Z"
                  fill={color}
                />
              </svg>
              &nbsp;
              <span>{tagName}</span>
            </Tag>
          ) : (
            name
          )}
        </div>
        {tagName && sla !== null && (
          <div
            style={{
              border: '1px solid #DADADA',
              width: '100%',
              padding: '4px 0 4px 18px',
              borderRadius: '5px',
              fontSize: '13px',
            }}
          >
            <svg
              width="12"
              height="11"
              viewBox="0 0 12 11"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M5.99976 3.5V5.5L6.74976 6.25M9.77226 7.7265C10.5908 8.1685 10.9998 8.39 10.9998 8.75C10.9998 9.11 10.5908 9.3315 9.77226 9.7735L9.21526 10.074C8.58676 10.4135 8.27276 10.583 8.12176 10.46C7.75176 10.1575 8.32826 9.378 8.46976 9.102C8.61376 8.822 8.61076 8.673 8.46976 8.398C8.32826 8.122 7.75176 7.3425 8.12176 7.04C8.27276 6.917 8.58676 7.0865 9.21526 7.426L9.77226 7.7265Z"
                stroke="#229849"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
              <path
                d="M6.51276 10.474C6.34409 10.491 6.17309 10.4997 5.99976 10.5C3.23826 10.5 0.999756 8.2615 0.999756 5.5C0.999756 2.7385 3.23826 0.5 5.99976 0.5C8.76126 0.5 10.9998 2.7385 10.9998 5.5C10.9991 5.84333 10.9658 6.17667 10.8998 6.5"
                stroke="#229849"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>
            &nbsp; {sla} hrs to respond
          </div>
        )}
      </div>
      <img
        src={RemoveIcon}
        alt="Remove Icon"
        className={tagName && sla !== null && 'priority-remove-icon'}
        onClick={removeAction}
      />
    </div>
  );
};

export default CustomTag;
